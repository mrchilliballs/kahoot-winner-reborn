(()=>{"undefined"==typeof window&&console.warn("kahoot.js-updated/browser is meant to be run in the browser");const e={answer:function(){this.answer=async e=>{let t=Date.now()-this.questionStartTime;return isNaN(t)&&(t=0),t<250&&await u((250-t)/1e3),new Promise(((t,s)=>{this._send(new h(this,e),(e=>{e&&e.successful?t(e):s(e)}))}))}},backup:function(){this.requestRecoveryData=async()=>(await u(.5),new Promise((e=>{this._send(new l(this),(t=>{e()}))}))),this.handlers.recovery=e=>{if("/service/player"===e.channel&&e.data&&17===e.data.id){const t=JSON.parse(e.data.content);this.emit("RecoveryData",t),this.quiz||(this.quiz={get questionCount(){return this.quizQuestionAnswers&&this.quizQuestionAnswers.length||10}}),this.quiz.quizQuestionAnswers=t.defaultQuizData.quizQuestionAnswers;const s=t.data;switch(t.state){case 0:break;case 1:this._emit("QuizStart",s);break;case 2:this._emit("QuestionReady",s.getReady);break;case 3:this._emit("QuestionStart",s);break;case 4:case 5:this._emit("TimeUp",s),s.revealAnswer&&this._emit("QuestionEnd",s.revealAnswer);break;case 6:this._emit("QuizEnd",s);break;case 7:this._emit("Feedback")}}},this.defaults.reconnect&&this.on("Joined",(()=>{this.reconnectRecovery&&this.requestRecoveryData()})),this.once("NameAccept",this.requestRecoveryData)},extraData:function(){const e=this;this.data.totalScore=0,this.data.streak=0,this.data.rank=1,this.on("GameReset",(()=>{this.data.totalScore=0,this.data.rank=0,this.data.streak=0,delete this.quiz})),this.on("QuestionStart",(t=>{Object.assign(t,{get answer(){return e.answer},get type(){return t.type},get index(){return t.questionIndex}});try{Object.assign(e.quiz.currentQuestion,t)}catch(e){}})),this.on("QuizStart",(t=>{Object.assign(t,{get questionCount(){return t.quizQuestionAnswers.length}});try{Object.assign(e.quiz,t)}catch(e){}})),this.on("QuestionReady",(t=>{Object.assign(t,{get type(){return t.gameBlockType},get index(){return t.questionIndex}});try{Object.assign(e.quiz.currentQuestion,t)}catch(e){}})),this.on("QuestionEnd",(e=>{!1!==e.hasAnswer&&(this.data.totalScore=e.totalScore,this.data.streak=e.pointsData.answerStreakPoints.streakLevel,this.data.rank=e.rank)}))},feedback:function(){this.handlers.feedback=e=>{"/service/player"===e.channel&&e.data&&12===e.data.id&&(this.feedbackTime=Date.now(),this._emit("Feedback",JSON.parse(e.data.content)))},this.sendFeedback=async(e,t,s,i)=>{if("0"===this.gameid[0])throw"Cannot send feedback in Challenges";const a=Date.now()-this.feedbackTime;return a<500&&await u((500-a)/1e3),new Promise(((a,o)=>{this._send(new n(this,e,t,s,i),(e=>{e&&e.successful?a(e):o(e)}))}))}},gameReset:function(){this.handlers.gameReset=e=>{"/service/player"===e.channel&&e.data&&5===e.data.id&&this._emit("GameReset")}},main:function(){this.classes.LiveTwoStepAnswer=d,this.classes.LiveJoinPacket=o,this.classes.LiveClientHandshake=i,this.classes.LiveJoinTeamPacket=r,this.classes.LiveLeavePacket=a,this.handlers.HandshakeChecker=e=>{if("/meta/handshake"===e.channel)if(e.clientId){this.clientId=e.clientId;const t=e.ext.timesync,s=Math.round((Date.now()-t.tc-t.p)/2),a=t.ts-t.tc-s;this._timesync={l:s,o:a,get tc(){return Date.now()}},this._send(new i(1,this._timesync,this)),delete this.handlers.HandshakeChecker}else this.emit("HandshakeFailed",e),this.socket.close()},this.handlers.PingChecker=e=>{"/meta/connect"===e.channel&&e.ext&&(e.advice&&"retry"===e.advice.reconnect&&this.emit("HandshakeComplete"),this._send(new i(2,e,this)))},this.handlers.timetrack=e=>{this.waiting&&this.waiting[e.id]&&(this.waiting[e.id](e),delete this.waiting[e.id])},this.handlers.TwoFactor=e=>{!this.settings||this.settings.twoFactorAuth?"/service/player"===e.channel&&e.data&&(53===e.data.id?(this.twoFactorResetTime=Date.now(),this.emit("TwoFactorReset")):51===e.data.id?this.emit("TwoFactorWrong"):52===e.data.id&&(this.connected=!0,this.emit("TwoFactorCorrect"),this.lastEvent&&this.emit.apply(this,this.lastEvent),delete this.lastEvent,delete this.twoFactorResetTime,delete this.handlers.TwoFactor)):delete this.handlers.TwoFactor},this.handlers.Disconnect=e=>{if("/service/player"===e.channel&&e.data&&10===e.data.id){JSON.parse(e.data.content).kickCode?this.disconnectReason="Kicked":this.disconnectReason="Session Ended",this.leave(!0)}}},nameAccept:function(){this.handlers.nameAccept=e=>{if("/service/player"===e.channel&&e.data&&14===e.data.id){const t=JSON.parse(e.data.content);this.name=t.playerName,this.emit("NameAccept",t),delete this.handlers.nameAccept}}},podium:function(){this.handlers.podium=e=>{"/service/player"===e.channel&&e.data&&13===e.data.id&&this._emit("Podium",JSON.parse(e.data.content))}},questionStart:function(){this.handlers.questionStart=e=>{"/service/player"===e.channel&&e.data&&2===e.data.id&&(this.questionStartTime=Date.now(),this._emit("QuestionStart",JSON.parse(e.data.content)))}},questionEnd:function(){this.handlers.questionEnd=e=>{"/service/player"===e.channel&&e.data&&8===e.data.id&&this._emit("QuestionEnd",JSON.parse(e.data.content))}},questionReady:function(){this.handlers.QuestionReady=e=>{"/service/player"===e.channel&&e.data&&1===e.data.id&&this._emit("QuestionReady",JSON.parse(e.data.content))}},quizEnd:function(){this.handlers.quizEnd=e=>{"/service/player"===e.channel&&e.data&&3===e.data.id&&this._emit("QuizEnd",JSON.parse(e.data.content))}},quizStart:function(){this.handlers.quizStart=e=>{"/service/player"===e.channel&&e.data&&9===e.data.id&&this._emit("QuizStart",JSON.parse(e.data.content))}},reconnect:function(){this.reconnect=async(e,t)=>{if(this.socket&&1===this.socket.readyState)throw"Already connected! If there is an issue, close the connection!";if(e=e||this.gameid,t=t||this.cid,"0"===e[0])throw"Cannot reconnect to a Challenge.";const s=await this._createHandshake();return this.settings=s,await u(.5),await this._send(new c(this,e,t)),new Promise(((e,i)=>{this.handlers.recovery&&(this.reconnectRecovery=!0),this.handlers.ReconnectFinish=async a=>{"/service/controller"===a.channel&&a.data&&"loginResponse"===a.data.type&&(a.data.error?(i(a.data),this.disconnectReason=a.description,this.leave(!0)):(this.cid=a.data.cid||t,this.emit("Joined",s),this.connected=!0,e(s)),delete this.handlers.ReconnectFinish)}}))}},teamAccept:function(){this.handlers.teamAccept=e=>{if("/service/player"===e.channel&&e.data&&19===e.data.id){const t=JSON.parse(e.data.content);this.emit("TeamAccept",t),delete this.handlers.teamAccept,this.handlers.recovery&&this.handlers.recovery({channel:"/service/player",data:{id:17,content:JSON.stringify(t.recoveryData)}})}}},teamTalk:function(){this.handlers.teamTalk=e=>{"/service/player"===e.channel&&e.data&&20===e.data.id&&this._emit("TeamTalk",JSON.parse(e.data.content))}},timeOver:function(){this.handlers.timeOver=e=>{"/service/player"===e.channel&&e.data&&4===e.data.id&&this._emit("TimeOver",JSON.parse(e.data.content))}}};class t{constructor(e,t,s){switch(e){case"1":this.timesync={l:t,o:s,tc:Date.now()};break;default:this.ack=!0,this.timesync={l:0,o:0,tc:Date.now()}}}}class s{constructor(e,t,s){this.channel=t,this.clientId=e.clientId,s&&(this.data=s),this.ext={}}}class i{constructor(e,s,i){switch(e+""){case"2":this.channel="/meta/connect",this.ext={ack:s.ext.ack,timesync:i._timesync},this.clientId=i.clientId;break;case"1":this.advice={timeout:0},this.channel="/meta/connect",this.ext={ack:0,timesync:new t(e,s.l,s.o)},this.clientId=i.clientId;break;default:this.advice={interval:0,timeout:6e4},this.minimumVersion="1.0",this.version="1.0",this.supportedConnectionTypes=["websocket","long-polling"],this.channel="/meta/handshake",this.ext=new t(e)}}}class a extends s{constructor(e){super(e,"/meta/disconnect"),Object.assign(this.ext,{timesync:Date.now()})}}class n extends s{constructor(e,t,s,i,a){super(e,"/service/controller",{id:11,type:"message",gameid:e.gameid,host:"kahoot.it",content:JSON.stringify({totalScore:e.data&&e.data.totalScore||0,fun:t,learning:s,recommend:i,overall:a,nickname:e.name})})}}class o extends s{constructor(e,t){super(e,"/service/controller",{gameid:e.gameid,host:"kahoot.it",name:t||["Johan Brand","Morten Versvik","Jamie Brooker"][Math.floor(3*Math.random())],type:"login",content:JSON.stringify({device:{userAgent:e.userAgent,screen:{width:1920,height:1080}}})})}}class r extends s{constructor(e,t){super(e,"/service/controller",{gameid:e.gameid,host:"kahoot.it",content:JSON.stringify(t),id:18,type:"message"})}}class h extends s{constructor(e,t){const s=e.quiz&&e.quiz.currentQuestion||{},i=s.gameBlockType||"quiz";let a=null;switch(i){case"multiple_select_quiz":case"multiple_select_poll":case"jumble":void 0!==t.length&&void 0!==t.push||(t=isNaN(t)?[0,1,2,3]:[+t],"jumble"===i&&4!==t.length&&(t=[0,1,2,3]));break;case"word_cloud":case"open_ended":a=t+"";break;default:isNaN(t)&&(t=0),t=Number(t)}const n={gameid:e.gameid,host:"kahoot.it",id:45,type:"message"};n.content=a?JSON.stringify({text:a,questionIndex:s.questionIndex||0,meta:{lag:e._timesync.l||30},type:i}):JSON.stringify({choice:t,questionIndex:s.questionIndex||0,meta:{lag:e._timesync.l||30},type:i}),super(e,"/service/controller",n)}}class c extends s{constructor(e,t,s){super(e,"/service/controller",{gameid:t+"",host:"kahoot.it",content:JSON.stringify({device:{userAgent:e.userAgent,screen:{width:1980,height:1080}}}),cid:s+"",type:"relogin"})}}class l extends s{constructor(e){super(e,"/service/controller",{id:16,type:"message",gameid:e.gameid,host:"kahoot.it",content:""})}}class d extends s{constructor(e,t){super(e,"/service/controller",{id:50,type:"message",gameid:e.gameid,host:"kahoot.it",content:JSON.stringify({sequence:t.join("")})})}}function u(e){return new Promise((t=>{setTimeout(t,1e3*e)}))}function g(e){let t={};if(!e)return t;let s=e.split("\r\n");for(let e=0;e<s.length;e++){let i=s[e],a=i.indexOf(": ");if(a>0){let e=i.substring(0,a),s=i.substring(a+2);t[e]=s}}return t}function m(e){const t=e.method||"GET",s=`${e.protocol}//${e.host||e.hostname}${e.port?":"+e.port:""}${e.pathname||e.path}${e.search?"?"+e.search:""}`,i=new XMLHttpRequest,a=e.body||e.json||e.form,n=e.json,o=e.form;if(i.open(t,s),n?i.setRequestHeader("Content-Type","application/json"):o&&i.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),e.headers)for(let t in e.headers)i.setRequestHeader(t,e.headers[t]);const r=new Promise(((e,t)=>{a?i.send(a):i.send(),i.onload=function(){e({body:i.response,headers:g(i.getAllResponseHeaders())})},i.onerror=function(e){t(e)}}));return r.json=function(){return r.then((e=>JSON.parse(e.body)))},r}class p{constructor(){this.callbacks={}}on(e,t){this.callbacks[e]||(this.callbacks[e]=[]),this.callbacks[e].push(t)}once(e,t){const s=e=>{t(e),this.off(s)};this.on(e,s)}off(e,t){let s=this.callbacks[e];if(s)for(let e=0;e<s.length;e++)if(t===s[e]){s.splice(e,1);break}}emit(e,t){let s=this.callbacks[e];s&&s.forEach((e=>e(t)))}}class k extends p{constructor(e,t){super(),this.socket=new WebSocket(e,t),this.socket.onopen=()=>{this.emit("open")},this.socket.onclose=e=>{this.emit("close",e)},this.socket.onerror=e=>{this.emit("error",e)},this.socket.onmessage=e=>{this.emit("message",e.data)}}get readyState(){return this.socket.readyState}get url(){return this.socket.url}get protocol(){return this.socket.protocol}send(e){this.socket.send(e)}close(){this.socket.close(...arguments)}}const y=/\p{Emoji}/gu;function f(){this.data=this.data||{},Object.assign(this.data,{totalScore:0,totalScoreNoBonus:0,totalStreak:0,streak:-1,phase:"start",questionIndex:0,correctCount:0,incorrectCount:0,unansweredCount:0}),this.answer=async(e,t)=>{clearTimeout(this.ti);const s=this.challengeData.kahoot.questions[this.data.questionIndex];let i=Date.now()-this.receivedQuestionTime;(this.defaults.options.ChallengeGetFullScore||this.defaults.options.ChallengeWaitForInput||!this.challengeData.challenge.game_options.question_timer)&&(i=1);const a=this.challengeData.progress.questions.reverse()[0].pointsQuestion||!1;+this.defaults.options.ChallengeScore>1500?this.defaults.options.ChallengeScore=1500:+this.defaults.options.ChallengeScore<0&&(this.defaults.options.ChallengeScore=0);const n=+this.defaults.options.ChallengeScore||Math.round(1e3*(1-i/s.time/2))*s.pointsMultiplier*+a;if(-1===this.data.streak){this.data.streak=0;const e=this.challengeData.progress.playerProgress.playerProgressEntries;let t=0;for(let s in e){if(s>=this.data.questionIndex)break;if(!e[s].questionMetrics)break;e[s].questionMetrics[this.name]>t||!this.challengeData.kahoot.questions[s].points?this.data.streak++:this.data.streak=0,t=e[s].questionMetrics[this.name],this.data.score=t}}const o=this.defaults.options.ChallengeAlwaysCorrect;let r=!1,h="";null===t&&(e=-1);let c=+e,l=[],d=0;switch(s.type){case"quiz":try{r=s.choices[c].correct,h=s.choices[c].answer}catch(e){r=!1,h=""}finally{o&&(r=!0),r&&(d+=n)}break;case"jumble":{r=JSON.stringify(e)===JSON.stringify([0,1,2,3]),"object"==typeof e&&void 0!==e.length||(e=[]);for(let t in e)e[t]=+e[t];let t=[];for(let i of e)try{t.push(s.choices[i].answer)}catch(e){t.push("")}h=t.join("|"),c=-1,o&&(r=!0),r&&(d+=n);break}case"multiple_select_quiz":{"object"==typeof e&&void 0!==e.length||(e=[]),r=!0;let t=[];for(let i in e)e[i]=+e[i],t.push(s.choices[i].answer);t=t.join("|");for(let t in s.choices)s.choices[t].correct&&(l.push(t),e.includes(+t)||o?r&&(d+=n):(d=0,r=!1));break}case"open_ended":{h=e+"";const t=/[~`!@#$%^&*(){}[\];:"'<,.>?/\\|\-_+=]/gm,i=h.replace(t,"");for(let e of s.choices)if(r=e.answer.replace(y,"")?i.replace(y,"").toLowerCase()==e.answer.replace(y,"").replace(t,"").toLowerCase():i==e,r){c=s.choices.indexOf(e);break}o&&(r=!0),r&&(d+=n);break}case"word_cloud":h=e+"",c=-1,r=!0,this.defaults.options.ChallengeScore&&(d+=n);break;default:c=+e||0,h=s.choices[c]&&s.choices[c].answer||"",r=!0,this.defaults.options.ChallengeScore&&(d+=n)}let u=[];if(s.choices)for(let e of s.choices)e.correct&&u.push(e.answer);const g=this.data.streak;r?this.data.streak++:this.data.streak=0;const m={device:{screen:{width:1920,height:1080},userAgent:this.userAgent},gameMode:this.challengeData.progress.gameMode,gameOptions:this.challengeData.progress.gameOptions,hostOriganizationId:null,kickedPlayers:[],numQuestions:this.challengeData.kahoot.questions.length,organizationId:"",question:{answers:[{bonusPoints:{answerStreakBonus:this._calculateStreakBonus()},choiceIndex:c,isCorrect:r,playerCid:+this.cid,playerId:this.name,points:+r*d,reactionTime:i,receivedTime:Date.now(),text:h}],choices:s.choices,duration:s.time,format:s.questionFormat,index:this.data.questionIndex,lag:0,layout:s.layout,playerCount:1,pointsQuestion:a,skipped:null===t,startTime:this.receivedQuestionTime,title:s.question,type:s.type,video:s.video},quizId:this.challengeData.kahoot.uuid,quizMaster:this.challengeData.challenge.quizMaster,quizTitle:this.challengeData.kahoot.title,quizType:this.challengeData.progress.quizType,sessionId:this.gameid,startTime:this.challengeData.progress.timestamp};switch(s.type){case"word_cloud":case"open_ended":Object.assign(m.question.answers[0],{originalText:h,text:h.toLowerCase().replace(/[~`!@#$%^&*(){}[\];:"'<,.>?/\\|\-_+=]/gm,"")}),m.question.choices=[];break;case"jumble":{let t=e;4!==t.length&&(t=[3,2,1,0]),m.question.answers[0].selectedJumbleOrder=t;break}case"multiple_select_quiz":m.question.answers[0].selectedChoices=e,m.question.answers[0].choiceIndex=-5;break;case"content":Object.assign(m.question.answers[0],{choiceIndex:-2,isCorrect:!0,reactionTime:0})}let p=d;d+=m.question.answers[0].bonusPoints.answerStreakBonus,this.data.totalStreak+=d-p,this.data.totalScoreNoBonus+=p,this.data.totalScore+=d,r&&this.data.correctCount++,r||null!==t||this.data.unansweredCount++,r||null===t||this.data.incorrectCount++;const k={choice:e,type:s.type,isCorrect:r,text:h,receivedTime:Date.now(),pointsQuestion:a,points:d,correctChoices:l,totalScore:this.data.totalScore,rank:this._getRank(),nemesis:this._getNemesis(),pointsData:{questionPoints:p,totalPointsWithBonuses:this.data.totalScore,totalPointsWithoutBonuses:this.data.totalScoreNoBonus,answerStreakPoints:{streakLevel:r&&this.data.streak||0,streakBonus:this._calculateStreakBonus(),totalStreakPoints:this.data.totalStreak,previousStreakLevel:g,previousStreakBonus:this._calculateStreakBonus(g)}},lastGameBlockIndex:this.data.questionIndex<0?0:this.data.questionIndex-1};return this.data.finalResult={rank:k.rank,cid:this.cid,correctCount:this.data.correctCount,incorrectCount:this.data.incorrectCount,unansweredCount:this.data.unansweredCount,isKicked:!1,isGhost:!1,playerCount:this.challengeData.challenge.challengeUsersList.length+1,startTime:this.challengeData.progress.timestamp,quizId:this.challengeData.kahoot.uuid,name:this.name,totalScore:this.data.totalScore,hostId:"",challengeId:"",isOnlyNonPointGameBlockKahoot:!1},this._httpRequest(`https://kahoot.it/rest/challenges/${this.challengeData.challenge.challengeId}/answers`,{headers:{"Content-Type":"application/json","Content-Length":(new TextEncoder).encode(JSON.stringify(m)).length},method:"POST"},!1,JSON.stringify(m)).finally((e=>{if(null===t)return k;this.ti=setTimeout((()=>{this._emit("TimeOver"),this._emit("QuestionEnd",k),this.next()}),1e3)}))},this.next=()=>{if(!this.stop)switch(this.data.phase){case"start":{this.data.phase="ready";const e=this.challengeData.kahoot;let t=[];for(let s of e.questions)t.push(s.choices?s.choices.length:null);this._emit("QuizStart",{name:e.title,quizQuestionAnswers:t}),setTimeout((()=>{this.next()}),5e3);break}case"ready":this._getProgress(this.data.questionIndex).then((e=>{!0===this.data.hitError&&(this.data.hitError=!1),0!==Object.keys(e).length&&(this.challengeData.progress=e),this.data.phase="answer";let t=this.challengeData.kahoot.questions[this.data.questionIndex];this._emit("QuestionReady",Object.assign(t,{questionIndex:this.data.questionIndex,timeLeft:5,gameBlockType:t.type,gameBlockLayout:t.layout,quizQuestionAnswers:this.quiz.quizQuestionAnswers})).catch((e=>{this.leave("Failed to fetch challenge progress.")})),setTimeout((()=>{this.next()}),5e3)})).catch((e=>{this.data.hitError&&(clearTimeout(this.ti),this.leave("Kahoot - Internal Server Error")),this.data.hitError=!0,this.next()}));break;case"answer":{let e=this.challengeData.kahoot.questions[this.data.questionIndex];if(this.receivedQuestionTime=Date.now(),this.data.phase="leaderboard",!e)return void this.leave("Unknown Error");if("content"===e.type)return this.data.questionIndex++,this.data.phase="ready",this.data.questionIndex===this.challengeData.kahoot.questions.length&&(this.data.phase="close"),void(this.challengeData.challenge.game_options.question_timer&&!this.defaults.options.ChallengeWaitForInput&&setTimeout((()=>{this.next()}),1e4));if(this.challengeData.challenge.game_options.question_timer&&!this.defaults.options.ChallengeWaitForInput)return this.ti=setTimeout((async()=>{const t=await this.answer(null,null);"content"!==e.type&&(this._emit("TimeOver"),this._emit("QuestionEnd",t)),this.next()}),e.time||5e3),void this._emit("QuestionStart",Object.assign(e,{questionIndex:this.data.questionIndex,gameBlockType:e.type,gameBlockLayout:e.layout,quizQuestionAnswers:this.quiz.quizQuestionAnswers,timeAvailable:e.time}));this._emit("QuestionStart",Object.assign(e,{questionIndex:this.data.questionIndex,gameBlockType:e.type,gameBlockLayout:e.layout,quizQuestionAnswers:this.quiz.quizQuestionAnswers,timeAvailable:e.time}));break}case"leaderboard":if(this.data.questionIndex++,this.data.phase="ready",this.data.questionIndex===this.challengeData.kahoot.questions.length)return this.data.phase="close",void(this.defaults.options.ChallengeAutoContinue&&setTimeout((()=>{this.next()}),5e3));this.defaults.options.ChallengeAutoContinue&&setTimeout((()=>{this.next()}),5e3);break;case"close":this.data.phase="complete",this._emit("QuizEnd",this.data.finalResult),this._emit("Podium",{podiumMedalType:["gold","silver","bronze"][this._getRank()-1]}),this.defaults.options.ChallengeAutoContinue&&setTimeout((()=>{this.next()}),3e4);break;case"complete":this.leave("Session Ended")}},this.leave=e=>{this.stop=!0,this.disconnectReason=e||"Player Left",this.socket.close()};const e=e=>{setTimeout((()=>{this.socket.emit("message",JSON.stringify([{channel:"/service/controller",data:{type:"loginResponse",cid:e+""}}]))})),this._send=async()=>{throw"This error should not appear unless you are trying to do something silly."}};this._calculateStreakBonus=e=>{let t=e||this.data.streak;return this.defaults.options.ChallengeUseStreakBonus?t>=6?500:t>0?100*(t-1):0:0},this._send=async t=>{if(t.data&&"login"===t.data.type)return this.name=t.data.name+"",this._httpRequest(`https://kahoot.it/rest/challenges/${this.challengeData.challenge.challengeId}/join/?nickname=${encodeURIComponent(this.name)}`,{method:"POST"},!0).then((t=>{if(t.error)throw t;return Object.assign(this.challengeData,t),this.cid=t.playerCid,e(this.cid),this.defaults.options.ChallengeAutoContinue&&setTimeout((()=>{this.next()}),5e3),this.challengeData})).catch((()=>{this.leave("Error connecting to Challenge")}))},this._httpRequest=async(e,t,s,i)=>{const a=new URL(e);let n={headers:{"User-Agent":this.userAgent,Origin:"kahoot.it",Referer:"https://kahoot.it/","Accept-Language":"en-US,en;q=0.8",Accept:"*/*"},host:a.hostname,protocol:a.protocol,path:a.pathname+(a.search||""),retry:3,body:i};for(let e in t)"object"==typeof t[e]&&n[e]?Object.assign(n[e],t[e]):n[e]=t[e];n=this.defaults.proxy(n)||n,this.loggingMode&&console.log("SEND: "+JSON.stringify({options:n,packet:i}));const o=m(n);this.emit("_Request",o);const r=await o;return s?JSON.parse(r.body):r.body},this._getNemesis=()=>{if(!this.challengeData.progress.playerProgress)return null;const e=Array.from(this.challengeData.progress.playerProgress.playerProgressEntries).reverse()[0].questionMetrics;let t=0,s=null,i=null;for(let a in e)a!==this.name&&e[a]>=this.data.totalScore&&(t++,(e[a]<i||null===s)&&(s=a,i=e[a]));return t?{name:s,isGhost:!1,rank:t,totalScore:i}:void 0},this._getRank=()=>{const e=this._getNemesis();return e?e.rank+1:1},this._getProgress=e=>void 0!==e?this._httpRequest(`https://kahoot.it/rest/challenges/${this.challengeData.challenge.challengeId}/progress/?upToQuestion=${e}`,null,!0):this._httpRequest(`https://kahoot.it/rest/challenges/pin/${this.gameid}`,null,!0).then((e=>this._httpRequest(`https://kahoot.it/rest/challenges/${e.challenge.challengeId}/progress`,null,!0).then((t=>Object.assign(e,{progress:t}))))),this._getProgress().then((e=>0==Object.keys(e.progress).length?this.leave("Invalid Challenge"):(this.challengeData=e,e.challenge.endTime<=Date.now()||e.challenge.challengeUsersList.length>=e.challenge.maxPlayers?this.leave("Challenge Ended/Full"):void this.emit("HandshakeComplete")))).catch((e=>{this.leave("Failed to fetch challenge progress.")}))}class w extends p{constructor(e,t){super(),e.challengeData=t,f.call(e),this.readyState=3,this.close=()=>{this.stop=!0,clearTimeout(e.ti),this.emit("close")}}}class q extends p{constructor(t){t=t||{},super(),this.defaults={};for(let e in this._defaults)"function"!=typeof this._defaults[e]?(this.defaults[e]={},Object.assign(this.defaults[e],this._defaults[e])):this.defaults[e]=this._defaults[e].bind({});Object.assign(this.defaults.options,t.options),Object.assign(this.defaults.modules,t.modules),this.defaults.proxy=t.proxy||this.defaults.proxy,this.defaults.wsproxy=t.wsproxy||this.defaults.wsproxy,this.classes={},this.handlers={},this.waiting={},this.data={};for(let t in this.defaults.modules)if(this.defaults.modules[t]||void 0===this.defaults.modules[t])try{e[t].call(this)}catch(e){}e.main.call(this),this.userAgent=navigator.userAgent,this.messageId=0}static defaults(e){var t=this;function s(){return new t(e)}return s.defaults=this.defaults.bind(s),s.join=this.join.bind(s),s}static join(){const e=new this,t=e.join.apply(e,arguments);return{client:e,event:t}}async answerTwoFactorAuth(e){if("0"==this.gameid[0])throw"Cannot answer two steps in Challenges";e=e||[0,1,2,3];const t=Date.now()-this.twoFactorResetTime;return t<250&&await u((250-t)/1e3),new Promise(((t,s)=>{this._send(new this.classes.LiveTwoStepAnswer(this,e),(e=>{null!==e&&e.successful?t(e):s(e)}))}))}async join(e,t,s){this.gameid=e+"",this.name=t;const i=await this._createHandshake();return this.settings=i,await u(1),await this._send(new this.classes.LiveJoinPacket(this,t)),new Promise(((e,t)=>{this.handlers.JoinFinish=async a=>{if("/service/status"===a.channel&&(this.emit("status",a.data),"LOCKED"===a.data.status))return a.data.description="Locked",t(a.data),delete this.handlers.JoinFinish,this.disconnectReason="Quiz Locked",void this.leave(!0);if("/service/controller"===a.channel&&a.data&&"loginResponse"===a.data.type){if(a.data.error)t(a.data),"duplicate name"!==a.data.description.toLowerCase()&&(this.disconnectReason=a.description,this.leave(!0));else if(this.cid=a.data.cid,"team"===i.gameMode)if(await u(1),!1!==s){s=s||["Player 1","Player 2","Player 3","Player 4"];try{await this.joinTeam(s,!0)}catch(e){console.log("ERR! Failed to send team members. Retrying");try{await this.joinTeam(s,!0)}catch(e){console.log("ERR! Failed to send team members a second time. Assuming the best.")}}this.emit("Joined",i),this.settings.twoFactorAuth?this.emit("TwoFactorReset"):this.connected=!0,e(i)}else this.emit("Joined",i),this.settings.twoFactorAuth&&this.emit("TwoFactorReset"),e(i);else this.emit("Joined",i),this.settings.twoFactorAuth?this.emit("TwoFactorReset"):this.connected=!0,e(i);delete this.handlers.JoinFinish}}}))}async joinTeam(e,t){if("0"===this.gameid[0]||"team"!==this.settings.gameMode||!this.socket||1!==this.socket.readyState)throw"Failed to send the team.";if(e=e||["Player 1","Player 2","Player 3","Player 4"],"team"!==this.settings.gameMode)throw"The gameMode is not 'team'.";return new Promise(((s,i)=>{this._send(new this.classes.LiveJoinTeamPacket(this,e),(e=>{null!==e&&e.successful?(!t&&this.emit("Joined",this.settings),this.settings.twoFactorAuth?!t&&this.emit("TwoFactorReset"):this.connected=!0,s(e)):i(e)}))}))}leave(){this._send(new this.classes.LiveLeavePacket(this)),arguments[0]||(this.disconnectReason="Client Left"),setTimeout((()=>{this.socket&&this.socket.close()}),500)}async _createHandshake(){if(this.socket&&1===this.socket.readyState&&this.settings)return this.settings;const e=await class{static async requestChallenge(e,t){let s=0;return await async function i(){let a={headers:{"User-Agent":navigator.userAgent,Origin:"kahoot.it",Referer:"https://kahoot.it/","Accept-Language":"en-US,en;q=0.8",Accept:"*/*"},host:"kahoot.it",protocol:"https:",path:`/rest/challenges/pin/${e}`};a=t.defaults.proxy(a)||a;const n=m(a);t.emit("_Request",n);try{const e=await n.json();return{data:Object.assign({isChallenge:!0,twoFactorAuth:!1,kahootData:e.kahoot,rawChallengeData:e.challenge},e.challenge.game_options)}}catch(e){if(s<2)return s++,await u(2),await i();throw{description:"Failed to get challenge data",error:e}}}()}static async requestToken(e,t){let s=0;return await async function i(){let a={headers:{"User-Agent":navigator.userAgent,Origin:"kahoot.it",Referer:"https://kahoot.it/","Accept-Language":"en-US,en;q=0.8",Accept:"*/*"},host:"kahoot.it",path:`/reserve/session/${e}/?${Date.now()}`,protocol:"https:"};a=t.defaults.proxy(a)||a;const n=m(a);t.emit("_Request",n);try{const{headers:e,body:t}=await n,s=JSON.parse(t);if(!e["x-kahoot-session-token"])throw{description:"Missing header token (pin doesn't exist)"};return{token:atob(e["x-kahoot-session-token"]),data:s}}catch(e){if(s++,s<3)return await u(2),await i();throw e.description?e:{description:"Request failed or timed out.",error:e}}}()}static solveChallenge(e){let t="";return e=(e=(e=(e=(e=(e=(e=(e=(e=(e=e.replace(/(\u0009|\u2003)/gm,"")).replace(/this /gm,"this")).replace(/ *\. */gm,".")).replace(/ *\( */gm,"(")).replace(/ *\) */gm,")")).replace("console.","")).replace("this.angular.isObject(offset)","true")).replace("this.angular.isString(offset)","true")).replace("this.angular.isDate(offset)","true")).replace("this.angular.isArray(offset)","true"),(()=>{const s=Function("var _ = {\n          replace: function() {\n            var args = arguments;\n            var str = arguments[0];\n            return str.replace(args[1], args[2]);\n          }\n        };\n        var log = function(){};return "+e);t=s().toString()})(),t}static concatTokens(e,t){for(var s="",i=0;i<e.length;i++){let a=e.charCodeAt(i)^t.charCodeAt(i%t.length);s+=String.fromCharCode(a)}return s}static resolve(e,t){return isNaN(e)?new Promise(((e,t)=>{t({description:"Invalid/Missing PIN"})})):"0"===e[0]?this.requestChallenge(e,t):this.requestToken(e,t).then((e=>{const t=this.solveChallenge(e.data.challenge);return{token:this.concatTokens(e.token,t),data:e.data}}))}}.resolve(this.gameid,this);return new Promise(((t,s)=>{if(e.data&&!e.data.isChallenge){const t=this._defaults.wsproxy(`wss://kahoot.it/cometd/${this.gameid}/${e.token}`);let s=[t.options];t.protocols&&s.splice(0,0,t.protocols),this.socket=new k(t.address,...s)}else this.socket=new w(this,e);this.socket.on("close",(()=>{this.emit("Disconnect",this.disconnectReason||"Lost Connection")})),this.socket.on("open",(()=>{this._send(new this.classes.LiveClientHandshake(0))})),this.socket.on("message",(e=>{this._message(e)})),this.socket.on("error",(()=>{this.emit("HandshakeFailed");try{this.socket.close()}catch(e){}})),this.on("HandshakeComplete",(()=>{t(e.data)})),this.on("HandshakeFailed",(()=>{s({description:"HandshakeFailed"})}))}))}async _send(e,t){if(this.socket&&1===this.socket.readyState){if(null==e)throw"empty_message";return new Promise((s=>{if(e.length?(e[0].id=++this.messageId+"",this.socket.send(JSON.stringify(e),s)):(e.id=++this.messageId+"",this.socket.send(JSON.stringify([e])),s()),this.loggingMode&&console.log("SEND: "+JSON.stringify([e])),t){const e=this.messageId+"";this.waiting[e]=t,setTimeout((()=>{this.waiting[e]&&(t(null),delete this.waiting[e])}),1e4)}}))}}_message(e){this.loggingMode&&console.log("RECV: "+e);for(let t in this.handlers)this.handlers[t](JSON.parse(e)[0])}_emit(e,t){this.quiz||(this.quiz={}),t&&t.quizQuestionAnswers&&(this.quiz.quizQuestionAnswers=t.quizQuestionAnswers),t&&void 0!==t.questionIndex&&(this.quiz.currentQuestion||(this.quiz.currentQuestion={}),Object.assign(this.quiz.currentQuestion,t)),this.connected?this.emit.apply(this,arguments):this.lastEvent=arguments}}q.prototype._defaults={modules:{extraData:!0,feedback:!0,gameReset:!0,quizStart:!0,quizEnd:!0,podium:!0,timeOver:!0,reconnect:!0,questionReady:!0,questionStart:!0,questionEnd:!0,nameAccept:!0,teamAccept:!0,teamTalk:!0,backup:!0,answer:!0},proxy:e=>{},wsproxy:e=>({address:e}),options:{ChallengeAutoContinue:!0,ChallengeGetFullScore:!1,ChallengeAlwaysCorrect:!1,ChallengeUseStreakBonus:!1,ChallengeWaitForInput:!1,ChallengeScore:null}},window.KahootClient=q})();
